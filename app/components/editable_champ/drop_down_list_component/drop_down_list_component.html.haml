- if @champ.render_as_radios?
  .fr-fieldset__content
    - items.each do |value, id|
      .fr-radio-group
        = @form.radio_button :value, id, id: dom_id(@champ, "radio_option_#{id}")
        %label.fr-label{ for: dom_id(@champ, "radio_option_#{id}") }
          = value

    - if !@champ.mandatory?
      .fr-radio-group
        = @form.radio_button :value, '', checked: @champ.value.blank? && !@champ.other?, id: dom_id(@champ, "radio_option_blank")
        %label.fr-label{ for: dom_id(@champ, "radio_option_blank") }
          Non renseign√©

- elsif @champ.render_as_combobox?
  %react-fragment
    = render ReactComponent.new "ComboBox/SingleComboBox", **react_props
- else
  = @form.select :value,
    items,
    { selected: @champ.selected, include_blank: true },
    { required: @champ.required?,
    id: @champ.input_id,
    class: select_class_names,
    aria: { describedby: select_aria_describedby } }

- if @champ.drop_down_other?
  %div{ class: other_element_class_names }
    = render EditableChamp::DropDownOtherInputComponent.new(form: @form, champ: @champ)
